{"ast":null,"code":"/*export default {\nmethods:{\n    Iniciar() {\n      // Coloca aquí el código que se ejecutará cuando se haga clic en el botón\n      alert(\"Hiciste clic en el botón\");\n    }\n  }\n}*/\n\nexport default {\n  data() {\n    return {\n      isDragging: false,\n      position: {\n        x: 0,\n        y: 0\n      },\n      joystickRadius: 50\n    };\n  },\n  computed: {\n    handleStyle() {\n      return {\n        transform: `translate(${this.position.x}px, ${this.position.y}px)`\n      };\n    }\n  },\n  methods: {\n    startDrag(event) {\n      this.isDragging = true;\n      this.updatePosition(event);\n    },\n    stopDrag() {\n      this.isDragging = false;\n      this.position = {\n        x: 0,\n        y: 0\n      };\n    },\n    updatePosition(event) {\n      if (this.isDragging) {\n        const boundingRect = this.$el.getBoundingClientRect();\n        const centerX = boundingRect.width / 2;\n        const centerY = boundingRect.height / 2;\n        const deltaX = event.clientX - boundingRect.left - centerX;\n        const deltaY = event.clientY - boundingRect.top - centerY;\n        const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        if (distance <= this.joystickRadius) {\n          this.position = {\n            x: deltaX,\n            y: deltaY\n          };\n        } else {\n          const angle = Math.atan2(deltaY, deltaX);\n          const limitedX = Math.cos(angle) * this.joystickRadius;\n          const limitedY = Math.sin(angle) * this.joystickRadius;\n          this.position = {\n            x: limitedX,\n            y: limitedY\n          };\n        }\n      }\n    }\n  },\n  mounted() {\n    document.addEventListener(\"mousemove\", this.updatePosition);\n    document.addEventListener(\"mouseup\", this.stopDrag);\n  },\n  beforeDestroy() {\n    document.removeEventListener(\"mousemove\", this.updatePosition);\n    document.removeEventListener(\"mouseup\", this.stopDrag);\n  }\n};","map":{"version":3,"names":["data","isDragging","position","x","y","joystickRadius","computed","handleStyle","transform","methods","startDrag","event","updatePosition","stopDrag","boundingRect","$el","getBoundingClientRect","centerX","width","centerY","height","deltaX","clientX","left","deltaY","clientY","top","distance","Math","sqrt","angle","atan2","limitedX","cos","limitedY","sin","mounted","document","addEventListener","beforeDestroy","removeEventListener"],"sources":["src/views/ModoTele.vue"],"sourcesContent":["<template>\n  <div class=\"tele\">\n    <h2>Teleoperación</h2>\n    <div class=\"row2\">\n      <div class=\"column2\">\n        \n        <camt>Videocámara izquierda AWS Deepracer</camt>\n        <div class=\"box camaraizq\">\n\n        </div>\n        <h4>Control teleoperación</h4>\n        <div class=\"box joy\">\n          <!--<div id=\"joystick\" style=\"width:100%\">\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n              \n              <circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"url(#grad1)\" />\n              <circle cx=\"50\" cy=\"50\" r=\"47\" fill=\"url(#grad2)\" stroke=\"#167ed8\" stroke-width=\"0.8px\" />\n              <circle cx=\"50\" cy=\"50\" r=\"44\" fill=\"url(#grad3)\" />\n              <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"white\" stroke=\"#167ed8\" stroke-width=\"0.5px\"\n                onclick=\"alert('CENTER');\" />\n              <path d=\"M50,10 58,22 43,22Z\" fill=\"#167ed8\" onclick=\"alert('UP');\" />\n              <path d=\"M50,90 58,78 43,78Z\" fill=\"#167ed8\" onclick=\"alert('DOWN');\" />\n              <path d=\"M10,52 22,60 22,46Z\" fill=\"#167ed8\" onclick=\"alert('LEFT');\" />\n              <path d=\"M90,52 78,60 78,46Z\" fill=\"#167ed8\" onclick=\"alert('RIGHT');\" />\n            </svg>\n          </div>-->\n\n          <!--OTRA OPCIÒN DE JOYSTICK-->\n          <div class=\"joystick\" @mousedown=\"startDrag\" @mousemove=\"updatePosition\" @mouseup=\"stopDrag\">\n              <div class=\"joystick-handle\" :style=\"handleStyle\"></div>\n          </div>\n        <!--<button type=\"submit\" value=\"Guardar\" class=\"boton\" style=\"color:#FFFF\" > Aplicar </button>-->\n        <v-btn class=\"boton\" color=\"#167ed8\" style=\"color:#FFFF\" @click=\"Iniciar\">Iniciar</v-btn>\n\n      </div>\n      </div>\n      <div class=\"column2\">\n        <camt>Videocámara derecha AWS Deepracer</camt>\n\n        <div class=\"box camarader\">\n\n        </div>\n\n      \n      <camt>Datos sensor LÌDAR</camt>\n\n      <div class=\"box datoslidar\">\n\n\n\n      </div>\n      </div>\n    </div>\n  </div>\n</template>\n    \n<script>\n\n/*export default {\nmethods:{\n    Iniciar() {\n      // Coloca aquí el código que se ejecutará cuando se haga clic en el botón\n      alert(\"Hiciste clic en el botón\");\n    }\n  }\n}*/\n\nexport default {\n  data() {\n    return {\n      isDragging: false,\n      position: { x: 0, y: 0 },\n      joystickRadius: 50,\n    };\n  },\n  computed: {\n    handleStyle() {\n      return {\n        transform: `translate(${this.position.x}px, ${this.position.y}px)`,\n      };\n    },\n  },\n  methods: {\n    startDrag(event) {\n      this.isDragging = true;\n      this.updatePosition(event);\n    },\n    stopDrag() {\n      this.isDragging = false;\n      this.position = { x: 0, y: 0 };\n    },\n    updatePosition(event) {\n      if (this.isDragging) {\n        const boundingRect = this.$el.getBoundingClientRect();\n        const centerX = boundingRect.width / 2;\n        const centerY = boundingRect.height / 2;\n        const deltaX = event.clientX - boundingRect.left - centerX;\n        const deltaY = event.clientY - boundingRect.top - centerY;\n        const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        if (distance <= this.joystickRadius) {\n          this.position = { x: deltaX, y: deltaY };\n        } else {\n          const angle = Math.atan2(deltaY, deltaX);\n          const limitedX = Math.cos(angle) * this.joystickRadius;\n          const limitedY = Math.sin(angle) * this.joystickRadius;\n          this.position = { x: limitedX, y: limitedY };\n        }\n      }\n    },\n  },\n  mounted() {\n    document.addEventListener(\"mousemove\", this.updatePosition);\n    document.addEventListener(\"mouseup\", this.stopDrag);\n  },\n  beforeDestroy() {\n    document.removeEventListener(\"mousemove\", this.updatePosition);\n    document.removeEventListener(\"mouseup\", this.stopDrag);\n  },\n};\n\n</script>\n    \n\n<style >\n\n.tele{\n  margin-top: 3%;\n}\n.row2 {\n  display: flex;\n  \n}\n\n/* Create two equal columns that sits next to each other */\n.column2 {\n  flex: 50%;\n  \n}\ncamt{\n  margin-left: 80px;\n  margin-bottom: 0%\n}\nh4{\n  margin: 20px 230px 20px 230px;\n}\nh2{\n  margin-left: 30px;\n  padding: 5px;\n}\n\n.box {\n\n  background: #ffffff;\n  box-shadow: 0px 14px 80px rgba(53, 54, 80, 0.2);\n  border-radius: 30px;\n  transition: all .3s;\n}\n\n.camaraizq {\n  width: 400px;\n  margin: 40px 130px;\n  padding: 100px 500px 250px 70px;\n}\n\n.camarader {\n  width: 400px;\n  margin: 40px 45px;\n  padding: 100px 500px 250px 70px;\n}\n\n.joy {\n  width: 400px;\n  margin: 40px 210px;\n  padding: 80px 120px 80px 120px;\n}\n.datoslidar{\n  width: 400px;\n  margin: 20px 45px;\n  padding: 100px 500px 250px 70px;\n}\n\n.boton{\n    font-size: 1rem;\n    margin: 10px 350px;\n    letter-spacing: 0.05rem;\n    padding: 20px 100px;\n    border-radius: 50px;\n}\n\n.joystick {\n  width: 100px;\n  height: 100px;\n  border: 2px solid #ccc;\n  border-radius: 50%;\n  position: relative;\n  cursor: pointer;\n}\n\n.joystick-handle {\n  width: 20px;\n  height: 20px;\n  background-color: #007bff;\n  border: 2px solid #0056b3;\n  border-radius: 50%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n</style>"],"mappings":"AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;EACAA,KAAA;IACA;MACAC,UAAA;MACAC,QAAA;QAAAC,CAAA;QAAAC,CAAA;MAAA;MACAC,cAAA;IACA;EACA;EACAC,QAAA;IACAC,YAAA;MACA;QACAC,SAAA,oBAAAN,QAAA,CAAAC,CAAA,YAAAD,QAAA,CAAAE,CAAA;MACA;IACA;EACA;EACAK,OAAA;IACAC,UAAAC,KAAA;MACA,KAAAV,UAAA;MACA,KAAAW,cAAA,CAAAD,KAAA;IACA;IACAE,SAAA;MACA,KAAAZ,UAAA;MACA,KAAAC,QAAA;QAAAC,CAAA;QAAAC,CAAA;MAAA;IACA;IACAQ,eAAAD,KAAA;MACA,SAAAV,UAAA;QACA,MAAAa,YAAA,QAAAC,GAAA,CAAAC,qBAAA;QACA,MAAAC,OAAA,GAAAH,YAAA,CAAAI,KAAA;QACA,MAAAC,OAAA,GAAAL,YAAA,CAAAM,MAAA;QACA,MAAAC,MAAA,GAAAV,KAAA,CAAAW,OAAA,GAAAR,YAAA,CAAAS,IAAA,GAAAN,OAAA;QACA,MAAAO,MAAA,GAAAb,KAAA,CAAAc,OAAA,GAAAX,YAAA,CAAAY,GAAA,GAAAP,OAAA;QACA,MAAAQ,QAAA,GAAAC,IAAA,CAAAC,IAAA,CAAAR,MAAA,GAAAA,MAAA,GAAAG,MAAA,GAAAA,MAAA;QACA,IAAAG,QAAA,SAAAtB,cAAA;UACA,KAAAH,QAAA;YAAAC,CAAA,EAAAkB,MAAA;YAAAjB,CAAA,EAAAoB;UAAA;QACA;UACA,MAAAM,KAAA,GAAAF,IAAA,CAAAG,KAAA,CAAAP,MAAA,EAAAH,MAAA;UACA,MAAAW,QAAA,GAAAJ,IAAA,CAAAK,GAAA,CAAAH,KAAA,SAAAzB,cAAA;UACA,MAAA6B,QAAA,GAAAN,IAAA,CAAAO,GAAA,CAAAL,KAAA,SAAAzB,cAAA;UACA,KAAAH,QAAA;YAAAC,CAAA,EAAA6B,QAAA;YAAA5B,CAAA,EAAA8B;UAAA;QACA;MACA;IACA;EACA;EACAE,QAAA;IACAC,QAAA,CAAAC,gBAAA,mBAAA1B,cAAA;IACAyB,QAAA,CAAAC,gBAAA,iBAAAzB,QAAA;EACA;EACA0B,cAAA;IACAF,QAAA,CAAAG,mBAAA,mBAAA5B,cAAA;IACAyB,QAAA,CAAAG,mBAAA,iBAAA3B,QAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}