{"ast":null,"code":"/* eslint-disable */\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\n//import axios from 'axios';\n\n//axios\nexport default {\n  data() {\n    return {\n      resBack: \"\",\n      stompClient: null\n    };\n  },\n  methods: {\n    conectarWebSocket() {\n      const socket = new SockJS('http://localhost:5430/ws');\n      this.stompClient = Stomp.over(socket);\n      this.stompClient.connect({}, frame => {\n        console.log('Conectado a WebSocket');\n        this.stompClient.subscribe('/topic/messages', mensaje => {\n          //this.resBack = mensaje.body;\n          //console.log('Mensaje recibido:', mensaje.body);\n        });\n      });\n    },\n    desconectarWebSocket() {\n      if (this.stompClient) {\n        this.stompClient.disconnect();\n        console.log('WebSocket desconectado');\n      }\n    },\n    sendName() {\n      stompClient.publish({\n        destination: \"/app/hello\",\n        body: JSON.stringify({\n          'name': \"Aleja\"\n        })\n      });\n    },\n    Iniciar() {\n      // Coloca aquí el código que se ejecutará cuando se haga clic en el botón\n      console.log('Entro en el método iniciar');\n      this.conectarWebSocket();\n    }\n  }\n};\n//var mensajeini=\"hola prueba\";\n//        this.stompClient.send(\"/app/receive\",mensajeini,{});\n//        console.log('Mensaje enviado:', mensajeini)","map":{"version":3,"names":["SockJS","Stomp","data","resBack","stompClient","methods","conectarWebSocket","socket","over","connect","frame","console","log","subscribe","mensaje","desconectarWebSocket","disconnect","sendName","publish","destination","body","JSON","stringify","Iniciar"],"sources":["src/views/ModoTele.vue"],"sourcesContent":["<template>\n  <div class=\"tele\">\n    <h2>Teleoperación</h2>\n    <div class=\"row2\">\n      <div class=\"column2\">\n\n        <camt>Videocámara izquierda AWS Deepracer</camt>\n        <div class=\"box camaraizq\">\n\n        </div>\n        <h4>Control teleoperación</h4>\n        <div class=\"box joy\">\n          <div id=\"joystick\" style=\"width:100%\">\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n\n              <circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"url(#grad1)\" />\n              <circle cx=\"50\" cy=\"50\" r=\"47\" fill=\"url(#grad2)\" stroke=\"#167ed8\" stroke-width=\"0.8px\" />\n              <circle cx=\"50\" cy=\"50\" r=\"44\" fill=\"url(#grad3)\" />\n              <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"white\" stroke=\"#167ed8\" stroke-width=\"0.5px\"\n                onclick=\"alert('CENTER');\" />\n              <path d=\"M50,10 58,22 43,22Z\" fill=\"#167ed8\" onclick=\"alert('UP');\" />\n              <path d=\"M50,90 58,78 43,78Z\" fill=\"#167ed8\" onclick=\"alert('DOWN');\" />\n              <path d=\"M10,52 22,60 22,46Z\" fill=\"#167ed8\" onclick=\"alert('LEFT');\" />\n              <path d=\"M90,52 78,60 78,46Z\" fill=\"#167ed8\" onclick=\"alert('RIGHT');\" />\n            </svg>\n          </div>\n\n\n        </div>\n        <!--<button type=\"submit\" value=\"Guardar\" class=\"boton\" style=\"color:#FFFF\" > Aplicar </button>-->\n        <v-btn class=\"boton\" color=\"#167ed8\" style=\"color:#FFFF\" @click=\"Iniciar\">Iniciar</v-btn>\n      </div>\n      <div class=\"column2\">\n        <camt>Videocámara derecha AWS Deepracer</camt>\n\n        <div class=\"box camarader\">\n\n        </div>\n\n\n        <camt>Datos sensor LÌDAR</camt>\n\n        <div class=\"box datoslidar\">\n          <span>mensaje de java: {{ resBack }}</span>\n\n\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n    \n<script>\n/* eslint-disable */\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs'\n//import axios from 'axios';\n\n\n//axios\nexport default {\n  data() {\n    return {\n      resBack: \"\",\n      stompClient: null\n    };\n  },\n\n  methods: {\n    conectarWebSocket() {\n      const socket = new SockJS('http://localhost:5430/ws');\n      this.stompClient = Stomp.over(socket);\n      this.stompClient.connect({}, frame => {\n        console.log('Conectado a WebSocket');\n        this.stompClient.subscribe('/topic/messages', mensaje => {\n        //this.resBack = mensaje.body;\n         //console.log('Mensaje recibido:', mensaje.body);\n        });\n      });\n    },\n\n    desconectarWebSocket() {\n      if (this.stompClient) {\n        this.stompClient.disconnect();\n        console.log('WebSocket desconectado');\n      }\n    },\n\n    sendName() {\n      stompClient.publish({\n      destination: \"/app/hello\",\n      body: JSON.stringify({'name': \"Aleja\"})\n    });\n    },\n\n    Iniciar() {\n      // Coloca aquí el código que se ejecutará cuando se haga clic en el botón\n      console.log('Entro en el método iniciar');\n      this.conectarWebSocket();\n    }\n  }\n}\n//var mensajeini=\"hola prueba\";\n//        this.stompClient.send(\"/app/receive\",mensajeini,{});\n//        console.log('Mensaje enviado:', mensajeini)\n\n</script>\n    \n\n<style >\n.tele {\n  margin-top: 3%;\n}\n\n.row2 {\n  display: flex;\n\n}\n\n/* Create two equal columns that sits next to each other */\n.column2 {\n  flex: 50%;\n\n}\n\ncamt {\n  margin-left: 80px;\n  margin-bottom: 0%\n}\n\nh4 {\n  margin: 20px 230px 20px 230px;\n}\n\nh2 {\n  margin-left: 30px;\n  padding: 5px;\n}\n\n.box {\n\n  background: #ffffff;\n  box-shadow: 0px 14px 80px rgba(53, 54, 80, 0.2);\n  border-radius: 30px;\n  transition: all .3s;\n}\n\n.camaraizq {\n  width: 400px;\n  margin: 40px 130px;\n  padding: 100px 500px 250px 70px;\n}\n\n.camarader {\n  width: 400px;\n  margin: 40px 45px;\n  padding: 100px 500px 250px 70px;\n}\n\n.joy {\n  width: 400px;\n  margin: 40px 210px;\n  padding: 80px 120px 60px 120px;\n}\n\n.datoslidar {\n  width: 400px;\n  margin: 20px 45px;\n  padding: 100px 500px 250px 70px;\n}\n\n.boton {\n  font-size: 1rem;\n  margin: 10px 360px;\n  letter-spacing: 0.05rem;\n  padding: 30px 100px;\n  border-radius: 50px;\n}\n</style>"],"mappings":"AAqDA;AACA,OAAAA,MAAA;AACA,OAAAC,KAAA;AACA;;AAGA;AACA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,WAAA;IACA;EACA;EAEAC,OAAA;IACAC,kBAAA;MACA,MAAAC,MAAA,OAAAP,MAAA;MACA,KAAAI,WAAA,GAAAH,KAAA,CAAAO,IAAA,CAAAD,MAAA;MACA,KAAAH,WAAA,CAAAK,OAAA,KAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA;QACA,KAAAR,WAAA,CAAAS,SAAA,oBAAAC,OAAA;UACA;UACA;QAAA,CACA;MACA;IACA;IAEAC,qBAAA;MACA,SAAAX,WAAA;QACA,KAAAA,WAAA,CAAAY,UAAA;QACAL,OAAA,CAAAC,GAAA;MACA;IACA;IAEAK,SAAA;MACAb,WAAA,CAAAc,OAAA;QACAC,WAAA;QACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA;UAAA;QAAA;MACA;IACA;IAEAC,QAAA;MACA;MACAZ,OAAA,CAAAC,GAAA;MACA,KAAAN,iBAAA;IACA;EACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}